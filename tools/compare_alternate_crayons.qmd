---
title: "compare_alternate_crayons"
format: html
editor: visual
---

## Compare Alternate Crayons

Many crayons are not based on reasonable or accurate metrics for the goodness of each line or of the network as a whole. This effort is to apply r5r to a proposed transit network to see where new lines would make the most difference in terms of travel time or access to employment over the existing network or other modes.

This script compares alternative crayons, like two potential future networks, to each other and shows where each crayon is better for access to employment than the other crayon.

## Select the Crayons

Choose the networks to compare as /dep/crayons/\<crayon1\> and /dep/crayons/\<crayon2\>

```{r}
crayon1 <- "lions_gate" #"crayon1" # Folder with crayon1 in ../dep/results_log
crayon1_labels = c("Lions Gate Line", "Lions Gate Line") # Names of the lines that should go on the map
crayon1_breaks = c("Lionsgate", "Kingsway") # Names of the lines matching shape_id in the shapefile
crayon1_values = c("Lionsgate" = "orange", "Kingsway" = "orange") # Names of the lines matching shape_id in the shapefile

crayon2 <- "circle" #"crayon2" # Folder with crayon2 in ../dep/results_log
crayon2_labels = c("Circle Line") # Names of the lines that should go on the map
crayon2_breaks = c("Circle") # Names of the lines matching shape_id in the shapefile
crayon2_values = c("Circle" = "purple") # Names of the lines matching shape_id in the shapefile

notes <- expression("Assumes that the proposed Surrey-Langley and UBCX extensions and Burnaby Mountain Gondola are built.\nAssumes that the Circle Line comes every 5 minutes and travels 35 km/h.\nAssumes that the 'Express' lines come every 10 minutes and travel 60 km/h.\nTravel times calculated for 2023-12-08 (Friday) at 2 PM.\nGTFS feed for the proposed routes calculated using mrcagney/make_gtfs.\nUses 2023-09-02 TransLink GTFS feed. Map data from OpenStreetMap.\nPopulation data from the 2021 census gathered using R/cancensus.R\nJob data from the 2021 census gathered using cansim.\nPopulation and job data are reproduced and distributed on an 'as is' basis with the permission of Statistics Canada.\nTravel times calculated using r5r: Rapid Realistic Routing on Multimodal Transport Networks with R5 in R.\nContains information licensed under the Open Government Licence â€“ British Columbia.")

crayons_folder <- "../dep/crayons/"
```

## Setup

```{r}
library(sf) # for loading shapefiles
library(data.table)
library(ggplot2)

library(readr)
library(tidyverse)

library(grid)
library(ggnewscale)
library(lwgeom) # for st_perimeter (not needed for st_area)

#use projected spherical geometry (on to a plane) for spatial calculations
sf::sf_use_s2(TRUE)
  
# Oceans and rivers data comes from the province
ocean <- st_read("../dep/maps/HydOcean_shp/HydOcean.shp")
river <- st_read("../dep/maps/HydRiver_shp/HydRiver.shp")
```

## Alternatives Comparison

Compare accessibility between two crayons

```{r}
library(scales) # to remove scientific notation on legend numbers

points <- st_read("../dep/orig_dest/pop_dotdensity/dotdensity-500-vancouver-abbotsford.shp")
job_points <- st_read("../dep/orig_dest/job_dotdensity/jobdotdensity-500-vancouver-abbotsford.shp")
route1 <- st_read(paste(crayons_folder, crayon1, "/shapes.geojson", sep = ""))
route2 <- st_read(paste(crayons_folder, crayon2, "/shapes.geojson", sep = ""))
stops1 <- st_read(paste(crayons_folder, crayon1, "/stops.geojson", sep = ""))
stops2 <- st_read(paste(crayons_folder, crayon2, "/stops.geojson", sep = ""))

file1 <- paste(crayons_folder, crayon1, "/results/transit_job_accessibility.csv", sep = "")
file2 <- paste(crayons_folder, crayon2, "/results/transit_job_accessibility.csv", sep = "")

network1 <- read_delim(
  file = file1,
  delim = ",",
  col_types = cols(
     id = col_character(),
     opportunity = readr::col_factor(levels = c("people")),
     percentile = col_integer(),
     cutoff = col_integer(),
     accessibility = col_double()
    )
  )
network2 <- read_delim(
  file = file2,
  delim = ",",
  col_types = cols(
     id = col_character(),
     opportunity = readr::col_factor(levels = c("people")),
     percentile = col_integer(),
     cutoff = col_integer(),
     accessibility = col_double()
    )
  )

# merge accessibility estimates
access_sf <- points |> 
  left_join(network1, join_by(id == id)) |>
  left_join(network2, join_by(id == id)) |>
  mutate(
    change = accessibility.y - accessibility.x
  ) |> filter (abs(change) > 100)

xlim <- c(-123.26, -122.5) # Metro Vancouver
ylim <- c(49.0, 49.36) # Metro Vancouver

# plot
ggplot() +
  geom_sf(
    data = access_sf, 
    mapping = aes(color = change),
    alpha = 1,
    size = 0.5,
    shape = 16 # Solid circle
    ) +
  scale_color_fermenter(
    palette = "PuOr",
    direction = -1,
    limits = c(-100000, 100000), # Good for regional/metro
    breaks = c(-100000, -75000, -50000, -25000, 0, 25000, 50000, 75000, 100000), # Good for regional/metro  ,
    na.value = "grey99",
    labels = comma
  ) +
  labs(color = "Difference in\nnumber of jobs\nwithin 45 minutes") +
  
  new_scale_color() +

  geom_sf(data = ocean, fill = "aliceblue", color = NA) +
  geom_sf(data = river, fill = "aliceblue", color = NA) +
  
  geom_sf(
    data = route2, 
    mapping = aes(color = shape_id),
    alpha = 0.2, 
    linewidth = 2
    ) +
  scale_color_manual(
    name = "Proposed Option",
    labels = crayon1_labels, 
    breaks = crayon1_breaks,
    values = crayon1_values
  ) +
  
  
  new_scale_color() +
  
  geom_sf(
    data = route1, 
    mapping = aes(color = shape_id),
    alpha = 0.2, 
    linewidth = 2
    ) +
  scale_color_manual(
    name = "Proposed Option",
    labels = crayon2_labels, 
    breaks = crayon2_breaks,
    values = crayon2_values
  ) +
  geom_sf(
    data = stops1, 
    color = "black", 
    shape = 16, 
    alpha = 0.8, 
    size = 1.5
    ) +
  geom_sf(
    data = stops2,
    color= "black",
    shape = 16,
    alpha = 0.8,
    size = 1.5
  ) +

  labs(title = "Difference in number of accessible jobs for potential new routes") +  
  labs(subtitle = "Each dot represents 500 residents, and its colour indicates the difference in access to jobs between the proposed options.") +
  annotation_custom(
    grob = textGrob(
      notes,
      x = 0.02,
      y = 0.04,
      just = c("left", "top"),
      gp = gpar(fontsize = 6, col = "grey36")
    ),
    xmin = -Inf,
    xmax = Inf,
    ymin = -Inf,
    ymax = Inf
  ) +
    
  coord_sf(xlim = xlim, ylim = ylim) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = "white", color = NA),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
```

```{r}
ggsave(
  paste(crayons_folder, "compare-", crayon1, "-", crayon2, "/transit_job_access_comparison_plot.png", sep = ""),
  units = "in", 
  width = 10, 
  height = 5.8, 
  dpi = 400
  )

write.csv(access_sf, paste(crayons_folder, "compare-", crayon1, "-", crayon2, "/transit_job_access_comparison.csv", sep = ""), row.names=FALSE)
```
